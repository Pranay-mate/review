{"version":3,"sources":["img/clouds+mountains.jpg","img/group.jpg","img/hills.jpg","img/lohgad.jpg","img/man.jpg","img/woman.jpg","img/other.jpg","header.js","slide.js","addReview.js","modal.js","review.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","id","className","src","alt","Slide","settings","autoplay","autoplaySpeed","dots","virtualList","duration","arrows","lohgad","cloud_mountains","groups","hills","axios","require","AddReview","props","state","value","visible","username","selectedFile","onChangee","bind","handleSubmit","values","console","log","post","trekker","toUpperCase","trekname","trekName","review","then","response","catch","error","this","setState","isModalOpen","e","target","userForm","required","val","length","maxLength","len","minLength","model","onSubmitFailed","handleSubmitFailed","onSubmit","Row","Label","htmlFor","md","Col","text","name","placeholder","validators","show","messages","for","select","defaultValue","textarea","resize","rows","type","color","onClick","toggle","Alert","isOpen","React","Component","Example","useState","setShow","handleClose","window","location","reload","Button","variant","Modal","onHide","closeButton","Title","Body","Footer","data","fetch","json","reverse","slice","Carousel","touch","interval","Item","Man","width","height","Woman","Other","App","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.d797a487.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/clouds+mountains.c7d575e7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/group.dea9f427.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hills.92029924.jpg\";","module.exports = __webpack_public_path__ + \"static/media/lohgad.2db1e169.jpg\";","module.exports = __webpack_public_path__ + \"static/media/man.89ce69c7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/woman.13cc70cc.jpg\";","module.exports = __webpack_public_path__ + \"static/media/other.89f5d5f7.jpg\";","\nimport React from \"react\";\n\nfunction Header() {\n  return (\n    <section id=\"home\" className=\"header\">\n     <div>\n        <h1><img src=\"https://img.icons8.com/ios-filled/50/000000/india-map.png\" alt=\"img loading\" />Indiaâ€™s <span className=\"safe\">Safest</span> Trekking Organisation</h1>\n\n      </div>\n    </section>\n  );\n}\nexport default Header;\n","import React from \"react\";\nimport Slider from \"infinite-react-carousel\";\n\nimport cloud_mountains from \"./img/clouds+mountains.jpg\";\nimport groups from \"./img/group.jpg\";\nimport hills from \"./img/hills.jpg\";\nimport lohgad from \"./img/lohgad.jpg\";\nimport \"./slide.css\";\n\nfunction Slide() {\n  const settings = {\n    autoplay: true,\n    autoplaySpeed: 3000,\n    className: \"slide_box\",\n    dots: true,\n    virtualList: true,\n    duration: 20,\n    arrows:true,\n\n  };\n  return (\n    <div>\n\n      <Slider {...settings}>\n\n      <div>\n        <img\n          src={lohgad}\n          className=\"slide_img col-lg-12\"\n          alt=\"Responsive img\"\n        />\n\n      </div>\n        <div>\n          <img\n            src={cloud_mountains}\n            className=\"slide_img col-lg-12\"\n            alt=\"Responsive img\"\n          />\n\n        </div>\n        <div>\n          <img\n            src={groups}\n            className=\"slide_img col-lg-12\"\n            alt=\"Responsive img\"\n          />\n\n        </div>\n        <div>\n          <img\n            src={hills}\n            className=\"slide_img col-lg-12\"\n            alt=\"Responsive img\"\n          />\n\n        </div>\n\n      </Slider>\n    </div>\n  );\n}\n\nexport default Slide;\n","import React from \"react\";\nimport { Button, Row, Col, Label } from 'reactstrap';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\nimport { Alert } from 'reactstrap';\nimport \"./addReview.css\";\nconst axios = require('axios');\n\n\nclass AddReview extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state ={\n      value: '',\n            visible: false,\n           username: '',\nselectedFile: null\n       }\nthis.onChangee = this.onChangee.bind(this);\n       this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  //preventDefault: () => { dispatch(actions.reset('values'))};\n\n\n\n   handleSubmit(values) {\n       console.log(values);\n\n    //   values.preventDefault();\n       //values.Review.reset();\n       axios.post(\"http://localhost:5000/addReview\", ({\n         username: values.trekker.toUpperCase(),\n         trekname: values.trekName.toUpperCase(),\n         review: values.review,\n\n     }))\n     .then((response) =>{\n     })\n     .catch(function (error) {\n       console.log(error);\n     })\n   };\n\n\n   toggleModal() {\n       this.setState({\n         isModalOpen: !this.state.isModalOpen\n       });\n   }\n    toggle() {\n           this.setState({\n             visible: !this.state.visible\n           });\n       }\n       onChangee(e) {\n           this.setState({ value: e.target.value });\n         }\n         handleSubmitFailed(userForm) {\n            // logs form-level errors\n            this.setState({\n              visible: !this.state.visible\n            });\n            // logs errors for user.email\n          }\n\n  render() {\n    const required = (val) => val && val.length;\n    const maxLength = (len) => (val) => !(val) || (val.length <= len);\n    const minLength = (len) => (val) => val && (val.length >= len);\n\n\n    // optional configuration\n\n    return (\n\n\n      <LocalForm model='Review' onSubmitFailed={ (userForm) => this.handleSubmitFailed(userForm) }  onSubmit={(values) => this.handleSubmit(values)} >\n\n          <Row className=\"form-group\">\n              <Label htmlFor=\"trekker\" className=\"Label\"  md={12}>TREKKER NAME</Label>\n              <Col  md={12}>\n                  <Control.text model=\".trekker\" id=\"trekker\" name=\"trekker\" placeholder=\"Trekker\" className=\"form-control\" validators={{ required, minLength: minLength(3), maxLength: maxLength(15) }} />\n                  <Errors className=\"text-danger\" model=\".trekker\" show=\"touched\" messages={{ required: 'Required', minLength: 'Must be greater than 3 characters', maxLength: 'Must be 15 charaters or less' }} />\n              </Col>\n          </Row>\n          <Row className=\"form-group\">\n              <Label htmlFor=\"trekName\" className=\"Label\"  md={12}>TREK PLACE</Label>\n              <Col  md={12}>\n                  <Control.text model=\".trekName\" id=\"trekName\" name=\"trekName\" placeholder=\"Trek Place\" className=\"form-control\" validators={{ required, minLength: minLength(5), maxLength: maxLength(15) }} />\n                  <Errors className=\"text-danger\" model=\".trekName\" show=\"touched\" messages={{ required: 'Required', minLength: 'Must be greater than 3 characters', maxLength: 'Must be 15 charaters or less' }} />\n              </Col>\n          </Row>\n          <Row  className=\"form-group\">\n              <Label for=\"gender\" className=\"Label\" md={12}>GENDER</Label>\n              <Col  md={12}>\n                  <Control.select defaultValue=\"MALE\" model=\".gender\" id=\"gender\" name=\"gender\" className=\"form-control\" >\n                      <option value=\"MALE\">MALE</option>\n                      <option value=\"FEMALE\">FEMALE</option>\n                      <option value=\"OTHER\">OTHER</option>\n\n                  </Control.select>\n              </Col>\n          </Row>\n          <Row className=\"form-group\">\n              <Label htmlFor=\"review\" className=\"Label\"   md={12}>Review</Label>\n              <Col  md={12}>\n                  <Control.textarea model=\".review\"  id=\"review\" name=\"review\" resize=\"none\" rows=\"6\" className=\"form-control\" validators={{ required, minLength: minLength(125), maxLength: maxLength(240) }} />\n                  <Errors className=\"text-danger\" model=\".review\" show=\"touched\" messages={{ required: 'Required', minLength: 'Must be greater than 125 characters. Please give us brief review', maxLength: 'Must be 240 charaters or less' }} />\n              </Col>\n          </Row>\n\n\n          <Button type=\"submit\" value=\"submit\" color=\"light\" onClick={this.toggle.bind(this)} >Submit</Button>\n\n          <Alert color=\"light\" isOpen={this.state.visible} toggle={this.toggle.bind(this)} >\n          Thank you! We got your review <img src=\"https://img.icons8.com/emoji/35/000000/smiling-face-with-smiling-eyes.png\" alt='img is loading' />\n          </Alert>\n      </LocalForm>\n    );\n  }\n}\nexport default AddReview;\n","import React, {useState} from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport AddReview from \"./addReview\";\n\n\nfunction Example() {\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => window.location.reload();\n  const handleShow = () => setShow(true) ;\n\n  return (\n    <>\n      <Button variant=\"dark\" onClick={handleShow}>\n        Add Review\n      </Button>\n\n      <Modal show={show} onHide={handleClose} >\n        <Modal.Header closeButton>\n          <Modal.Title>ADD REVIEW</Modal.Title>\n        </Modal.Header>\n        <Modal.Body className='Modal'>\n          <AddReview />\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n\n\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n\nexport default Example;\n","import React from \"react\";\nimport Carousel from 'react-bootstrap/Carousel';\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"react-bootstrap-carousel/dist/react-bootstrap-carousel.css\";\nimport './review.css';\nimport Example from './modal';\n\nimport Man from \"./img/man.jpg\";\nimport Woman from \"./img/woman.jpg\";\nimport Other from \"./img/other.jpg\";\n\n//import groups from \"./data/group.jpg\";\n//import hills from \"./data/hills.jpg\";\n//const axios = require('axios');\n\nclass Slide extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state ={\n      data:[\"\",\"\",\"\"]\n       };\n  }\n\n  componentDidMount(){\n\n    fetch(\"http://localhost:5000/review\")\n    .then(response => {\n          return response.json();\n        })\n        .then(data => {\n          const reverse= data.reverse().slice(0,3);\n          this.setState({data: reverse})\n\n          console.log(reverse);\n        })\n      }\n\nrender() {\n\n\n  return (\n    <div>\n\n    <div className=\"review_headline\">\n\n    <h1>REVIEWS   </h1>\n\n\n\n    </div>\n\n    <Carousel id=\"Reviews\" className=\"row\" touch interval=\"2000\" >\n      <Carousel.Item>\n        <div className=\"col-lg-12\">\n\n        <div className=\"image_box\"><img className=\"rounded-circle\" src={Man} alt=\"Generic placeholder img\" width=\"140\" height=\"140\" />\n          </div>\n            <p className=\"reviewer_name\" >{this.state.data[0].username}</p>\n            <h2>{this.state.data[0].trekname}</h2>\n            <p className='review_lines'>{this.state.data[0].review}</p>\n\n        </div>\n      </Carousel.Item>\n      <Carousel.Item>\n      <div className=\"col-lg-12\">\n      <div className=\"image_box\"><img className=\"rounded-circle\" src={Woman} alt=\"Generic placeholder img\" width=\"140\" height=\"140\" />\n        </div>\n\n            <p className=\"reviewer_name\" >{this.state.data[1].username}</p>\n            <h2>{this.state.data[1].trekname}</h2>\n            <p className='review_lines'>{this.state.data[1].review}</p>\n\n\n        </div>\n      </Carousel.Item>\n      <Carousel.Item>\n      <div className=\"col-lg-12\">\n      <div className=\"image_box\"><img className=\"rounded-circle\" src={Other} alt=\"Generic placeholder img\" width=\"140\" height=\"140\" />\n        </div>\n            <p className=\"reviewer_name\" >{this.state.data[2].username}</p>\n            <h2>{this.state.data[2].trekname}</h2>\n            <p className='review_lines'>{this.state.data[2].review}</p>\n\n        </div>\n      </Carousel.Item>\n\n    </Carousel>\n    <div className='addreview'>\n    <Example />\n    </div>\n</div>\n  );\n}\n}\n\nexport default Slide;\n","import React from 'react';\nimport './App.css';\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"react-bootstrap-carousel/dist/react-bootstrap-carousel.css\";\n\nimport Header from \"./header\"\nimport Slide from \"./slide\"\nimport Review from \"./review\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Slide />\n      <Review />\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}